[{"title":"可视化微分几何与形式（第一章练习题）","path":"/2025/08/02/VDGAF-Chapter1/","content":"可视化微分几何和形式 第一幕习题 序幕：牛顿的最终相等（） 1.（这是一个展示如何从序幕里定义的“最终相等”变为相等的模型.）画一个边长为 的立方体，其体积为 。然后，保持这个立方体的一个顶点不变，将立方体画得稍大一些，使得边长为 。记这样引起的体积增量为 ，用这个图推导：当 趋于 0 时， 。 因为最后一个最终相等的式子两边的量都与 无关，所以它们相等： 。 证明：参考序幕中的描述，考虑完全立方和公式： 则有 上式右侧的第一、二、三、四项分别对对应图中的青色、绿色、紫色和黄色体积。可见 来自于绿色、紫色和黄色体积。当 足够小时，对 的贡献从大到小依次是绿色 紫色 黄色，所以有 成立。于是有： 由于等式两边都与 无关，所以可得： 2。此题来自 Needham（1993）。令 ，.在 上画一个单位圆，在第一象限的单位圆周上画出点 。让 点绕原点旋转一个（最终为 的）小角度 。以 点为顶点，以 和 为边，画一个小三角形利用在序幕里介绍的牛顿的几何论证，立即可以同时推导出 且。 如图所示： 当 增加了小量 后，垂直和水平方向的长度增量分别为 和 。当 趋向于 0 时， 临边趋近于 的弧长，即 （单位圆半径为 1）。 由于 ，小三角形与大三角形相似。有 以及 3。此题来自 Needham（1993）。在 的第一象限上任取一点 ，令 是经过点 的直线， 是 轴、 轴和 围成的三角形的面积 + 利用通常的微积分方法求出使得 最小的 的位置，并证明 . + 利用牛顿的推理，在不计算的情况下，立即求出其解.[提示：让 旋转一个（最终为0的）小角度 ，记旋转后改变的面积为 。将 画成两个小三角形，可以看到这两个小三角形分别最终等于两个小扇形，用 写出 最终相等的表达式.再令 .] 解： 1。第一问基于拉格朗日乘子法计算最小面积。 首先，我们知道二位平面直角坐标系下的直线方程为 直线 经过点 ，所以有 成立。此直线与 轴和 轴的交点分别为 和 于是 轴、 轴和 围成的三角形面积为 。 将 (3-2) 看作约束，(3-3) 看作最小化的目标函数，则可以定义拉格朗日函数 求 的问题可转化为 于是 根据（3-5-）可得 ，分别带入（3-5-）和（3-5-）中，可得 以及 。如果是为了求目标函数的最小值（无多个极值点）， 无需求得 和 的具体值，只需要代入目标函数中，即可得到最小值： 注意到，随着直线逐步与 轴或者 轴平行，三角形 的面积趋近于无穷，所求极值不可能是极大值，所以 即为所求最小值。 2。给出几何解释： 几何解释可以参考下图 alt text 图中蓝色部分为直线 与 轴和 轴围成的面积，而红色部分为直线绕点 逆时针旋转 角后的直线 与 轴和 轴围成的面积。于是 是两部分面积之差，为蓝色部分的面积减去 再加上 ，即 当 足够小时，扇，扇。扇形面积取决于圆心角 和圆半径 。若两个扇形的圆心角相等，当且仅当半径相等时，两个扇形面积相等。 令 ，要求 趋近于 0 时，，即 扇扇 当 时，以 为斜边的直角三角形 和以 为斜边的直角三角形 全等，面积均为 ，所以此时有 矩形 又上式右侧表达式与 和 无关，所以可得面积 。又由之前的讨论可知 无最大值，所以此时求得的面积为最小值。 4。此题来自 Arnol’d（1990，第 28 页），原题包含解答。计算极限 + 利用你能想到的任何传统方法.（如果不提醒你这道题不容易，那就是我们的过错了.阿诺尔德曾说：能很快解这道题的数学家只有非尔兹奖获得者格尔德 · 法尔廷斯.） + 利用牛顿的几何推理. 1。使用函数和反函数的微积分知识求解（答案来自 StackExchange: A question regarding a claim of V。I。Arnold） 令原极限的值为 。我们令 ，，则问题可以化为 注意到反函数的导数满足： 于是 洛必达法则 又 带入可得 2。几何证明 （答案来自 StackExchange: A question regarding a claim of V。I。Arnold） 令原极限的值为 。如果令 ，，函数在 附近的图像如下图所示 Figure of exercise 4.2 红色直线表示函数 。蓝色实曲线和绿色实曲线分别表示 和 的函数曲线，同色的虚线表示对应的反函数，与原函数图像关于 对称。 注意到极限 的表达式为 则 根据对称性有 ，即 此外，四个函数的切线在 0 处的值为： 说明四个函数在 时趋势与 相同。于是有 （平行线，长度近似相等） 所以 又上式两端与 无关，所以有 的情况类似，总之有 成立。 欧几里得几何与非欧几何 5。我们无法确定古巴比伦人是如何算出书中图 12 所示的毕达哥拉斯三元组的，但我们知道：在 1500 多年后（公元前 300 年左右），欧儿里得是第一个叙述并证明生成这种三元组最一般公式的人；在 2000 多年后（公元 250 年左右），丢番图是第一个利用几何构作法生成单位圆上的全部有理点（即坐标为有理数的点）的人。可以利用这些有理点构作毕达哥拉斯三元组，如下所示。 + 已知 是单位圆周 上的一点， 是经过点 的直线 ， 是 与 的另一个交点，证明： 且 + 证明：如果斜率 为有理数，则 和 也是有理数，即 且 + 证明：如果 是毕达哥拉斯三元组，则存在整数 和 使得 且 + 证明：对于任意整数 、 和 ，若 且且 则 是毕达哥拉斯三元组。这就是欧几里得最先得出的毕达哥拉斯三元组的最一般公式. 1。证明：使用代数方法可以很快地证明本题的几问 已知单位圆方程为 。直线与圆的交点可以通过联立单位圆方程直线方程求解得到，即 注意到直线经过圆上一点 ，那么只要直线不与单位圆相切（此时直线平行 轴），则直线和单位圆必有两个交点。求解方程组，可得 和 2。证明：将 带入第 1 问的答案中即可。 已知 为有理数，不妨设 和 为互质的两个整数，且 。将 代入交点的表达式，有： 注意 和 的表达式中，分子和分母都是整数，且分布不可能为 0。所以交点的横纵坐标也都是有理数。 3。证明：根据数形结合的思想求解此问。因为 为毕达哥拉斯三元组，则 、 和 都为整数。不妨设 、 和 的符号非负。于是每个毕达哥拉斯三元组都可以与平面直角坐标系的整数格点一一对应，满足 。 如图所示： 考虑直线 与单位圆的交点 。根据相似三角形关系，交点坐标为 再考虑经过 和交点 的直线，其斜率为 其分母和分子都为正整数，可知 为有理数。于是根据小问 2 的结论，可知一定存在正整数 和 满足要求，且 、。 1。证明：只需验证 即可，即： 可以验证 6。利用式（1.3）证明：当球面上的三角形面积收缩到 0 时，球面上的居民认为它最终就是欧几里得几何的，也就是内角和等于 . 根据式 (1.3) 可知球面三角形的角盈 与三角形面积 的关系为 当三角形面积趋向于 0 时，有 。 上式左右两端不包含面积 ，所以 ，即面积趋向于 0 时，角盈趋向于 0。根据角盈的定义，可知球面三角形的内角和与 的差值接近于 0，说明球面三角形内角和趋近于 。当面积为 0 时，角盈为 0，三角形内角和为 。 7。设 和 是球面上两个不同的点，并且不是对径点。于是有唯一的大圆经过这两个点，并且被 和 分成两段弧。设 和 分别是这两段弧的中点。证明：与 和 等距的点的轨迹是经过 和 的大圆，并且与 垂直相交，这就是弧 的广义“中垂线”.（提示：想象通过旋转球面使得 和 位于赤道上，这在心理上有帮助，但在数学上无关紧要.） 证明：猜测需要反证法 1。证明：命题“与 和 等距的点的轨迹是经过 和 的大圆”。 首先，不妨设 是优弧 的中点， 是劣弧 的中点，则有 ，弧长为大圆周长的一半，对应圆心角为 ，所以点 和 为对径点，线段 为此大圆的直径。 根据题目描述，两段弧的中点 和 距离 和 相等，则与 和 等距的点的轨迹一定经过 和 。在球面上取不同于 和 的点 ，使得 与 和 等距。 现假设 与 和 构成的圆 不是球面的大圆，则圆的直径一定小于球的直径，圆上任意两点之间的弦长小于等于圆的直径小于球的直径。但是圆上点 和 的距离等于球的直径，说明 中存在长度等于球面半径的弦，得出矛盾。所以假设不成立，圆 一定是球面上的大圆。 我们可以将点 和 放置于赤道，此时点 和 也位于赤道。注意到南北极点 和 到 和 的距离相等，都为 大圆，所以南北极点也位于 上。则经过 、、 和 的大圆将球面切分为两个半球，在 所在的半球面上的点，距离 比距离 更近，而在 所在的半球面上的点，距离 比距离 更近。 如果距离 和 相等的点的轨迹，是经过 、、 和 的不同于大圆的任意路径 ，则至少存在一点 ，其位于 或者 所在的半球内，此时 与 和 的距离不相等，与 “ 是距离 和 相等的点的轨迹” 这一假设矛盾。所以与 和 等距的点的轨迹是经过 和 的大圆 。 2。证明：第 1 问中得到的圆 ，与圆面 垂直。 证明：将点 和 放置于赤道，可知 就是经过 、、 和 的大圆。考虑球面三角形 ，根据图 1-6 的描述，弧长 与赤道垂直，对应 所在的圆面 与 所在的赤道面垂直。证毕。 8。证明：如果单位球面 上三角形每条边的长度都小于 ，则这个三角形包含在一个半球面里。（提示：想象通过旋转球面使得这个三角形的一个顶点位于北极点，这在心理上有帮助，但在数学上无关紧要。） 证明：不妨将球面三角形的一个顶点 放置到球面的北极点，则三角形从北极点邻接的一条边所在的圆面将球面切分为两个半球。令此边不同于 的顶点为 ，第三个顶点为 。 考虑球面三角形面积 ： 球面三角形一定在相邻的两条边所在球面的夹角范围内。以极点三角形为例，三角形直径最大时，极角对应的边长一定在赤道上。此时，极角对边的长度小于半圆周 ，面积小于 ，即： 所以 ，得 。球面的表面积为 ，半球面积为 ，说明三角形面积比半球面积小，可以证明三角形一定位于半球内。 9。欧几里得平面具有的特征之一是正则铺砌，即平面可以用正多边形密铺（无缝地铺满）。平面有且只有三种正则铺砌，即正三角形、正方形和正六边形。球面也有正则铺砌。想象一个正二十面体的线框内接在一个半径为 的球面中。这时，再想象球心上有一个光源照射出来，于是线框在球面上留下阴影（称为“中心投影”），如图 3-1 所示。正二十面体由 20 个正三角形围成，用直线连接每个正三角形的中心与其三个顶点和三条边的中点，将正三角形进一步分割成 6 个全等三角形。这样就得到了一个内接于球面、由全等三们形的边组成的线框。 + 解释为什么正二十面体的棱在曲面上的影子是大圆的圆弧，从而生成了真正的球面三角形。 + 假设在球面内接一个正十二面体。正十二面体由12个正五边形围成，用直线连接每个正五边形的中心与其五个顶点和五条边的中点，将正五边形分割成 10 个全等三角形。这样就得到了一个内接于球面、由全等三角形的边组成的线框。验证这也是正则铺砌。 + 这样，整个（面积为 的）球面分成了几个全等三角形？每个三角形的面积 是多少？ + 通过观察，确定每个顶点有几个角聚在一起。证明三角形的内角分别是 ，，，由此计算每个三角形的角盈 。 + 证明以上两个答案与哈里奥特定理（1.3）是一致的。 证明：为什么正二十面体的投影的影子是大圆的圆弧 要证明投影是大圆的圆弧，即证明投影点（从圆心到棱上任意一点的射线与球面的交点）位于同一个大圆即可。 首先可知球心和某条棱的两个端点构成一个平面，此棱也在平面上。从圆心出发，经过棱上任意一点的射线也位于此平面上，所以射线与球面的交点也位于此平面上。 此外，射线与球面的交点的轨迹，是平面与圆相交的交线的一部分。此交线上的任意一点到球心的距离相等，即为大圆。 综上所述，从圆心出发，经过棱上任意一点的射线，与球面交点的轨迹必定是经过圆心与棱的平面与球面相交所形成的大圆的一端弧。而大圆的圆弧可以形成球面三角形。 验证嘛，跳过了。核心是，正二十面体和正十二面体互为对偶多面体。 正二十面体的每个面都会在球面投影成一个球面三角形。根据题目的描述，正三角形会被划分为 6 个全等的三角形，所以球面被划分为了 20 * 6 = 120 个全等的球面三角形。每个三角形的面积为 。 如图所示，球面上存在由四个（蓝色圆圈）、六个（绿色圆圈）和十个（红色圆圈）全等的角聚成的球面点，它们对应的角度分别为 ， 和 。 alt text 根据以上两问，可得 ，而 最终有 ，即 3.1 式成立。 证明： 在欧几里得几何里，四边形的内角和为 。 如果 是半径为 的球面上的测地线四边形，则其角盈为 的内角和 画一条对角线将 分割成两个测地线三角形，证明式 (1.3) 可以推广为 证明式 (2.2)，由此，上一问的结论可以推广到球面上的测地线 边形。 证明欧氏空间下，四边形内角和为 . 证明：在欧氏空间下，四边形的对角线可以将四边形分为两个三角形，四边形的内角和等于两个三角形的内角和之和，即 。 根据已知条件证明式 (1.3) 可推广为 球面测地线四边形如图所示 alt text 首先，四边形 的角盈在先前的章节中并未涉及，此处只能采用分割的思想，将四边形划分为多个三角形。球面上大圆的圆弧 ，也即测地线四边形 的对角线，将 划分为两个测地线三角形 和 。 依据上一问的证明思路，可知角盈 ： 又 所以有 那么根据 (1.3)，有 两式相加可得 证毕。 证明 (2.2) 使用小 边形代替 ，角盈为 边形内角和，那么 (2.1) 式 边形边形边形内角和边形（为多边形拆分后的第个子三角形） 又 公式 所以 边形边形 等号左右与 无关，所以有 边形边形 从而，上一问的结论可以推广到球面上的测地线 边形。 虽然但是哈，实验咱就不做了吧 高斯曲率 实验不做了 实验不做了 实验不做了","tags":["微分几何，可视化微分几何"]},{"title":"tinyDVR 开发日记","path":"/2021/12/08/tinyDVR-开发日记/","content":"研一修了《科学计算可视化算法》这门课，期间完成了一个简单的基于光线投射算法的直接体绘制程序。但是没有交互界面，没有文件系统，缺少很多东西，希望能在后续追加功能，把它做成一个方便使用的小工具，麻雀虽小，五脏俱全嘛。 开发环境 IDE VS 2019 依赖 LOG: spdlog UI: ImGui Render: OpenGL (GLFW + GLAD) Data Format Current: DAT file + raw (uniform grid only) Future: others (To be implemented) 定位 这个工作是为了实现一个易于交互、界面友好的直接体绘制工具。同时提供 API 方便研究者快速实现一些体绘制算法，用于验证。目前已经有了渲染部分的雏形，但是仍旧有许多不足。 代码框架 框架目前参考开源游戏引擎 Hazel 的代码结构，整个系统依赖于简易渲染引擎 DVR.Render 在窗口中渲染体绘制结果，后续会添加其他的部分，包括交互、文件系统等。（这里需要补充图片） 后续工作 这里会列出后续的计划和当前阶段性工作的实现状况（不定期更新），记法如下： 斜体表示后续待改进的工作 粗体表示正在进行的工作 正体表示已经稳定，不会有大的改动的工作。 Version 0.1.0 简单渲染引擎 简单 GUI 重构(0%)","tags":["C++","Direct Volume Rendering","Scientific Visualization","Computer Graphics"]},{"title":"论文撰写修改体悟","path":"/2021/08/18/论文撰写修改体悟/","content":"24号自武汉参加 ChinaVis 返京就一直在修改第一篇文章。能不能接受就看造化了。希望能有所回报吧 心得体会 撰写文章的三个重要目标（指导方向） + 不要让读者（审稿人）猜、总结你想要表达的观点和内容 + 不要让读者（审稿人）找你要提及的内容（段落、图片、表格等）在哪里 + 逻辑连贯、语句通顺、段落承接、连接词 + 信息填写、排版按要求 大概就是这四条，另外记得用版本管理软件（.git等）进行版本管理。尝试使用Word的审阅记录对文档的修改。最后，勤问老师，就算挨骂也要问明白。 就酱。","tags":["Paper Writing","Experience"]},{"title":"我的 CMAKE 入门","path":"/2021/05/27/我的-CMAKE-入门/","content":"尝试 CMake 入门。之前跟着 TheCherno 大佬的游戏引擎视频教程 最好的游戏引擎开发教学没意见吧！（repo）尝试使用 premake 构建工程，但是考虑到大多数的开源项目都是用 CMake 进行管理的，还是决定要学习一下 CMake。在这里会记录一下常用的 CMake，同时也作为我的第一篇正式博客贴出。 说明 学习内容参考（这一段内容作废，万物靠百度，万事靠自学）cmake-examples-Chinese，对应的代码 cmake-examples。 除非特殊说明，所有的 CMake 项目构建过程按如下方式进行： mkdir buildcd buildcmake .. Windows 下（如果安装了VS）默认生成 VS 的 .sln 工程项目，Linux 下可以直接在 build 文件夹中执行 make 编译代码生成可执行文件。 2021.5.27 基本信息 对于只包含一个源文件 main.cpp 的简单项目，只需要在项目文件夹下创建 CMakeLists.txt 并写入基本信息： cmake_minimum_required(VERSION 3.5) #设置CMake最小版本project (hello_cmake) #设置工程名add_executable(hello_cmake main.cpp) #生成可执行文件 cmake_minimum_required 版本要求需要查看 API 文档，像添加预编译头文件（pch.h）的功能 target_precompile_headers 的功能在版本 3.16 之后添加。 project 同时定义了以下的常量： $PROJECT_NAME # 就是 hello_cmake add_executable 中第一个参数就是解决方案中唯一一个（暂时）项目的名字。 项目设置 project 项目名后可以添加性质（trait） 版本就是 VERSION X.X.X 描述就是 DESCRIPTION \"XXX\" 语言就是 LANGUAGES CXX 使用 set 可以设置常量和修改预置量，如 设置常量 set(INCLUDE_DIR \"include/\") = $INCLUDE_DIR 等价 \"include\" 修改预置量 set(CMAKE_CXX_STANDARD 17) 指定 C++ 语言版本为 C++17 set(CMAKE_CXX_STANDARD_REQUIRED ON/OFF) 是否允许低版本语言编译 set(CMAKE_CXX_EXTENSIONS ON/OFF) 不懂干嘛的，之后懂了可能会补上 使用 target_include_directories(name PUBLIC|PRIVATE|INTERFACE dir) 向项目 name 添加位于 dir 下的头文件，有三种访问方式： PUBLIC: name 中的头文件和源文件都包含了 dir 的头文件，main.cpp 也需要包含 dir 下的头文件 PRIVATE: name 中只有源文件包含了 dir 的头文件，main.cpp 对 dir 的头文件未知（无法 include） INTERFACE: name 中只有头文件包含了 dir 的头文件，main.cpp 需要包含 dir 下的头文件 2021.8.18 久违的更新 文件包含 添加辅助源文件目录 aux_source_directory(path target) 得到的 target 用于命令 add_executable 和 add_library 中，最终会把 path 下的所有源文件添加到项目的源文件管理器中。 同名文件搜索 如果要添加目录 path 下所有某后缀 *.xx 的文件，则可以 file(GLOB_RECURSE target *.xx)source_group(name FILES path) 这样 path 下所有的 *.xx 文件路径都被添加到了 target 中，在 add_executable 和 add_library 中添加对应条目即可在最终生成的项目中看到同名文件夹和对应的文件。 子目录、子工程 add_subdirectory(path) 是将 path 下的子项目包含进编译工程中，但是要求 path 下必须有描述子项目的 CMAKE 文件 CMakeLists.txt； 多个子项目之间的连接依赖关系可以通过命令 target_link_libraries(target [PUBLIC|PRIVATE|INTERFACE] dependency1 [PUBLIC|PRIVATE|INTERFACE] dependency2 ...) 完成，且不要求子目录 CMakeLists.txt 令添加依赖子项目目录，只需要在根目录的 CMakeLists.txt 中添加了所有子项目目录即可。该命令的依赖关系指标参数[PUBLIC|PRIVATE|INTERFACE]和 target_include_directories 相同。 target_include_directories(target [PUBLIC|PRIVATE|INTERFACE] path1 [PUBLIC|PRIVATE|INTERFACE] path2 ...) 向 target 添加包含头文件，参数与 target_include_directories 相同。 目标文件目录 对于目标为可执行文件的目标，可以指定可执行文件生成目录为 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY path) 对于目标为静态库的目标，可以指定静态库生成目录为 set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY path) 对于目标为动态库的目标，可以指定动态库生成目录为 set(CMAKE_BINARY_OUTPUT_DIRECTORY path) 注意，修改目标文件目录的操作必须在 add_executable 和 add_library 之前！ 今天就这些了。","tags":["C++","CMAKE"]},{"title":"blog in 2021","path":"/2021/05/27/blog-in-2021/","content":"2021 重新出发 我的博客无了，只能开个新的了。虽然之前在本科写了好多，但是其实都是些乱七八糟没啥意义的代码分享（贝塞尔曲线那个不算）。现在重新安装了 hexo，只能重新开始了，发发牢骚。 虽然我也不想这样，但是没有办法，公式插件啥的都得重新弄 烦死了 \\(E = mc^2\\)"},{"title":"Hello World","path":"/2021/05/27/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post $ hexo new My New Post More info: Writing Run server $ hexo server More info: Server Generate static files $ hexo generate More info: Generating Deploy to remote sites $ hexo deploy More info: Deployment"}]